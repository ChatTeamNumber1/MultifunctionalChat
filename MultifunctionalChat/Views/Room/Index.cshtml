@using MultifunctionalChat.Models;

<head>
    <meta charset="utf-8" />
    <title>Комната "@ViewBag.room.Name"</title>
</head>

<table width="100%">
    <tbody>
        <tr>
            <td width="25%" style="vertical-align:top">
                <div id="RoomsList">
                    @await Html.PartialAsync("GetRoomsForUser")
                </div>
                <br />
                <br />
                <div id="UsersList">
                    @await Html.PartialAsync("GetUsers")
                </div>
            </td>
            <td width="75%">
                <div id="header"></div>
                @if (User.Identity.IsAuthenticated)
                {
                    <a href="~/Account/Logout">Выйти</a>
                }
                else
                {
                    <a href="~/Account/Login">Войти</a>
                }

                <div id="userNameBlock">
                    <input id="userName" type="text" value="@ViewBag.currentUser.Name" hidden="" />
                </div>

                <br />

                <h3>Комната "@ViewBag.room.Name". Создатель "@ViewBag.owner.Name"</h3>
                <h3>История сообщений</h3>

                <div id="chatroom" data-roomId="@ViewBag.roomId" style="width:100%; height: 400px; overflow-y:scroll">
                    @await Html.PartialAsync("GetMessages")
                </div>

                <br />

                <div id="inputForm" style="width:100%">
                    <h3>Новое сообщение</h3>
                    <textarea style="width:100%" id="message"></textarea>
                    <br />
                    <input style="width:100%" type="button" id="sendBtn" value="Отправить" />
                </div>
            </td>
        </tr>
    </tbody>
</table>

<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script>

    window.setInterval(function () {
        var elem = document.getElementById('chatroom');
        elem.scrollTop = elem.scrollHeight;
    }, 5000);

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();

    let userName = '';

    // получение сообщения от сервера
    hubConnection.on('RefreshMessages', function (roomId) {

        if (roomId != @ViewBag.roomId) {
            return;
        }
        var xhr = new XMLHttpRequest();
        xhr.open("get", "/Room/GetMessages", true);
        xhr.send();
        xhr.onload = function () {
            document.getElementById("chatroom").innerHTML = xhr.responseText;
            alert("1");
        };
    });

    hubConnection.on('RefreshUsers', function (roomId) {

        if (roomId != @ViewBag.roomId) {
            return;
        }

        var xhr = new XMLHttpRequest();
        xhr.open("get", "/Room/GetUsers?Id=@ViewBag.roomId", true);
        xhr.send();
        xhr.onload = function () {
            document.getElementById("UsersList").innerHTML = xhr.responseText;
        };

        var xhr2 = new XMLHttpRequest();
        xhr2.open("get", "/Room/GetRoomsForUser", true);
        xhr2.send();
        xhr2.onload = function () {
            document.getElementById("RoomsList").innerHTML = xhr2.responseText;
        };
    });

    // получение сообщения от сервера
    hubConnection.on('Receive', function (message, userName, roomId) {

        if (userName == "" || roomId != @ViewBag.roomId) {
            return;
        }

        // создает элемент <p> для сообщения пользователя
        let now = new Date();
        let elem = document.createElement("p");
        elem.innerHTML =
            "<p><table width=\"100%\"><tbody><tr>" +
                "<td width=\"50%\">" +
                    "<b>" + userName + "</b>" +
                    "&nbsp;&nbsp;&nbsp;"+
                    "<img title=\"@ViewBag.currentUser.UserRole.Name\" height=\"20\" src=\"@ViewBag.currentUser.UserRole.ImageAddress\" />" +
                "</td>" +
            "<td width=\"50%\" align=\"right\">" + now.toLocaleString("ru", {
                year: '2-digit', month: '2-digit', day: '2-digit',
                hour: '2-digit', minute: '2-digit', second: '2-digit'
            }) + "</td>" +
            "</tr></tbody></table>" +
            "<p>" + message + "</p></p>";

        document.getElementById("chatroom").appendChild(elem);
    });

    // установка имени пользователя
    userName = document.getElementById("userName").value;
    if (userName != "") {
        document.getElementById("header").innerHTML = userName;
    }

    // отправка сообщения на сервер
    document.getElementById("sendBtn").addEventListener("click", function (e) {

        if (userName == "") {
            return;
        }

        let message = document.getElementById("message").value;
        if (message.startsWith('room') || message.startsWith('/room')) {
            alert('Может, вы имели в виду //room');
            return;
        }
        else if (message.startsWith('user') || message.startsWith('/user')) {
            alert('Может, вы имели в виду //user');
            return;
        }
        else if (message.startsWith('info') || message.startsWith('/info')) {
            alert('Может, вы имели в виду //info');
            return;
        }
        else if (message.startsWith('find') || message.startsWith('/find')) {
            alert('Может, вы имели в виду //find');
            return;
        }
        else if (message.startsWith('help') || message.startsWith('/help')) {
            alert('Может, вы имели в виду //help');
            return;
        }
        else if (message.startsWith('video') || message.startsWith('/video')) {
            alert('Может, вы имели в виду //videoCommentRandom');
            return;
        }

        const data = new FormData();
        data.append("text", message);
        data.append("userId", @ViewBag.currentUser.Id);
        data.append("roomId", @ViewBag.roomId);
        data.append("MessageDate", new Date());
        var xhr = new XMLHttpRequest();

        xhr.open("post", "/message", true);
        xhr.onload = function () {
            if (xhr.status != 200) {
                alert(xhr.responseText);
            } else {
                //Обычное сообщение еще и в чатике на фронте отображаем
                if (!message.startsWith('//')) {
                    hubConnection.invoke("Send", message, userName, "@ViewBag.roomId");
                } else {
                    alert(xhr.responseText);
                    hubConnection.invoke("RefreshUsers", "@ViewBag.roomId");
                    hubConnection.invoke("RefreshMessages", "@ViewBag.roomId");
                }
            }
        };
        xhr.send(data);
    });

    hubConnection.start();
</script>