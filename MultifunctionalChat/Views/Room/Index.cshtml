@using MultifunctionalChat.Models;
<head>
    <meta charset="utf-8" />
    <title>Лучший чат от сильнейшей команды мира</title>
</head>

<table width="100%">
    <tbody>
        <tr>
            <td width="25%" style="vertical-align:top">
                <h3>Доступные комнаты</h3>
                <br />
                @foreach (Room chatRoom in ViewBag.chatRooms)
                {
                    <h3>@chatRoom.Name</h3>
                    <br />
                }
                @ViewBag.roomId
                <br />
                @ViewBag.currentUser.UserRole.Name
                <br />
            </td>
            <td width="75%">
                <div id="header"></div>
                @if (User.Identity.IsAuthenticated)
                {
                    <a href="~/Account/Logout">Выйти</a>
                }
                else
                {
                    <a href="~/Account/Login">Войти</a>
                }

                <div id="userNameBlock">
                    <input id="userName" type="text" value="@ViewBag.currentUser.Name" hidden="" />
                </div>

                <br />

                <h3>История сообщений</h3>
                <div id="chatroom" data-roomId="@ViewBag.roomId" style="width:100%; height: 400px; overflow-y:scroll"></div>

                <br />

                <div id="inputForm" style="width:100%">
                    <h3>Новое сообщение</h3>
                    <textarea style="width:100%" id="message"></textarea>
                    <br />
                    <input style="width:100%" type="button" id="sendBtn" value="Отправить" />
                </div>
            </td>
        </tr>
    </tbody>
</table>

<script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/16.11.0/umd/react.development.js"></script>
<script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.11.0/umd/react-dom.development.js"></script>
<script src="~/js/app.jsx"></script>

<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();

    let userName = '';
    // получение сообщения от сервера
    hubConnection.on('Send', function (message, userName) {
        if (userName == "") {
            return;
        }

        // создает элемент <p> для сообщения пользователя
        let now = new Date();
        let elem = document.createElement("p");
        elem.innerHTML =
            "<p><table width=\"100%\"><tbody><tr>" +
                "<td width=\"50%\">" +
                    "<b>" + userName + "</b>" +
                    "&nbsp;&nbsp;&nbsp;"+
                    "<img title=\"@ViewBag.currentUser.UserRole.Name\" height=\"20\" src=\"@ViewBag.currentUser.UserRole.ImageAddress\" />" +
                "</td>" +
            "<td width=\"50%\" align=\"right\">" + now.toLocaleString("ru", {
                year: '2-digit', month: '2-digit', day: '2-digit',
                hour: '2-digit', minute: '2-digit', second: '2-digit'
            }) + "</td>" +
            "</tr></tbody></table>" +
            "<p>" + message + "</p></p>";

        document.getElementById("chatroom").appendChild(elem);
    });

    // установка имени пользователя
    userName = document.getElementById("userName").value;
    if (userName != "") {
        document.getElementById("header").innerHTML = userName;
    }

    // отправка сообщения на сервер
    document.getElementById("sendBtn").addEventListener("click", function (e) {
        if (userName == "") {
            return;
        }

        let message = document.getElementById("message").value;
        if (message.startsWith('room') || message.startsWith('/room')) {
            alert('Может, вы имели в виду //room');
            return;
        }
        else if (message.startsWith('user') || message.startsWith('/user')) {
            alert('Может, вы имели в виду //user');
            return;
        }
        else if (message.startsWith('//')) {

            var messageParts = message.split(' ');
            console.log(messageParts);
            //Здесь обработка команд
        }

        //Обычное сообщение
        else {


            hubConnection.invoke("Send", message, userName);

            const data = new FormData();
            data.append("text", message);
            data.append("userId", @ViewBag.currentUser.Id);
            data.append("roomId", @ViewBag.roomId);
            data.append("MessageDate", new Date());
            var xhr = new XMLHttpRequest();

            xhr.open("post", "/message", true);
            xhr.send(data);
        }
    });

    hubConnection.start();
</script>